plugins {
    id "org.springframework.boot" version "2.0.1.RELEASE"
    id "maven-publish"
}

apply plugin: 'java'
apply plugin: 'signing'

group = 'com.lostsidewlk.cultivator'
version = '0.3-dev'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    implementation 'org.springframework.boot:spring-boot-starter:3.1.0'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    // https://mvnrepository.com/artifact/io.projectreactor/reactor-core
    implementation 'io.projectreactor:reactor-core:3.5.6'
    // https://mvnrepository.com/artifact/com.pi4j/pi4j-core
    //noinspection GradlePackageUpdate
    implementation 'com.pi4j:pi4j-core:1.4' // do not upgrade
    // https://mvnrepository.com/artifact/org.kie/kie-ci
    implementation 'org.kie:kie-ci:8.39.0.Final'
    // https://mvnrepository.com/artifact/org.drools/drools-core
    implementation 'org.drools:drools-core:8.39.0.Final'
    // https://mvnrepository.com/artifact/org.drools/drools-compiler
    implementation 'org.drools:drools-compiler:8.39.0.Final'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation 'org.apache.commons:commons-collections4:4.4'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

springBoot {
    mainClassName = 'com.lostsidewalk.cultivator.app.Application'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'cultivator'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'cultivator'
                description = 'This module contains the Cultivator smart gardening framework backend.'
                url = 'https://www.lostsidewalk.com/dev/cultivator'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/license/mit/'
                    }
                }
                developers {
                    developer {
                        id = 'elderscrollsjesus'
                        name = 'Michael Harris'
                        email = 'meh@lostsidewalk.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/lostsidewalk/cultivator.git'
                    developerConnection = 'scm:git:https://github.com/lostsidewalk/cultivator.git'
                    url = 'https://www.lostsidewalk.com/dev/cultivator'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/releases'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

jar {
    enabled = true
}

bootJar {
    classifier = 'application'
}
